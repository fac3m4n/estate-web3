{
  "address": "0x588996EB35F98511757AeF6Ef83C384BE58e2C7f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidInitialization",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitializing",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidRejected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "BuyProperty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "CancelSelling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "version",
          "type": "uint64"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_montlyAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_remainingAmount",
          "type": "uint256"
        }
      ],
      "name": "PaymentMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "PriceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "canBid",
          "type": "bool"
        }
      ],
      "name": "PropertyListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LISTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TUSDCtoken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "acceptBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "buyProperty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "buyWithInstallment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelSelling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lister",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_canBid",
          "type": "bool"
        }
      ],
      "name": "createProperty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_tokenId",
          "type": "uint256[]"
        }
      ],
      "name": "getBatchMarketItem",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeListed",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "canBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace.MarketItem[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getDownPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMarketItem",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeListed",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "canBid",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "highestBidder",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "highestBid",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace.MarketItem",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMonthlyPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "grantListerRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "installment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "downPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "monthlyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "remainingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paidAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paymentDeadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isTax",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "items",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeListed",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canBid",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "highestBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highestBid",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_canBid",
          "type": "bool"
        }
      ],
      "name": "listProperty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "makePayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "percentage_downPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "periodInMonth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "propertyNFT",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "rejectBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_on",
          "type": "bool"
        }
      ],
      "name": "setIsTax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percent",
          "type": "uint256"
        }
      ],
      "name": "setPercentage_downPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_months",
          "type": "uint256"
        }
      ],
      "name": "setPeriodInMonth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        }
      ],
      "name": "setPopertyNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_taxFees",
          "type": "uint256"
        }
      ],
      "name": "setTaxFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_taxReceiver",
          "type": "address"
        }
      ],
      "name": "setTaxReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "updatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x50713b4bfc4476150a58187c24baa55e7ec90014a586592f8e387f8adcf77899",
  "receipt": {
    "to": null,
    "from": "0x4b7866e717f27Fa1C38313D25F647aE0598571BD",
    "contractAddress": "0x588996EB35F98511757AeF6Ef83C384BE58e2C7f",
    "transactionIndex": 12,
    "gasUsed": "3477539",
    "logsBloom": "0x
    "blockHash": "0x9fadc5bb41b984337bf4c7eb314ff24c99ee88cf9c2431993131e6915de1fb54",
    "transactionHash": "0x50713b4bfc4476150a58187c24baa55e7ec90014a586592f8e387f8adcf77899",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 47317074,
        "transactionHash": "0x50713b4bfc4476150a58187c24baa55e7ec90014a586592f8e387f8adcf77899",
        "address": "0x588996EB35F98511757AeF6Ef83C384BE58e2C7f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004b7866e717f27fa1c38313d25f647ae0598571bd"
        ],
        "data": "0x",
        "logIndex": 12,
        "blockHash": "0x9fadc5bb41b984337bf4c7eb314ff24c99ee88cf9c2431993131e6915de1fb54"
      }
    ],
    "blockNumber": 47317074,
    "cumulativeGasUsed": "4052333",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a9efb83632b1e4bbd2848b93daa7651e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BuyProperty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"CancelSelling\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_montlyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_remainingAmount\",\"type\":\"uint256\"}],\"name\":\"PaymentMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"PriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canBid\",\"type\":\"bool\"}],\"name\":\"PropertyListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LISTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TUSDCtoken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"acceptBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"buyProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"buyWithInstallment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelSelling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lister\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_canBid\",\"type\":\"bool\"}],\"name\":\"createProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_tokenId\",\"type\":\"uint256[]\"}],\"name\":\"getBatchMarketItem\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeListed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getDownPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMarketItem\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeListed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.MarketItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMonthlyPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"grantListerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"installment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"downPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"monthlyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remainingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentDeadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeListed\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canBid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"highestBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestBid\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_canBid\",\"type\":\"bool\"}],\"name\":\"listProperty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"makePayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"percentage_downPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodInMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"propertyNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"rejectBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_on\",\"type\":\"bool\"}],\"name\":\"setIsTax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percent\",\"type\":\"uint256\"}],\"name\":\"setPercentage_downPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_months\",\"type\":\"uint256\"}],\"name\":\"setPeriodInMonth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"name\":\"setPopertyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taxFees\",\"type\":\"uint256\"}],\"name\":\"setTaxFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxReceiver\",\"type\":\"address\"}],\"name\":\"setTaxReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"updatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC-721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\\n     *   {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\\n     *   a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the address zero.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title ERC-721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC-721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\\n     * reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n// Import necessary OpenZeppelin contracts\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\n\\ncontract Marketplace is Ownable, ReentrancyGuard, Pausable, AccessControl, IERC721Receiver, Initializable {\\n    // State variables\\n    IERC721 public propertyNFT;\\n    address public taxReceiver; // Address to receive taxes\\n    IERC20 public TUSDCtoken; // USDC token\\n    uint256 public taxFees; // Listing fees\\n    bool public isTax; // Tax switch\\n    uint256 public periodInMonth; // Installment period 60 months\\n    uint256 public percentage_downPayment; // Percentage downpayment\\n\\n    bytes32 public constant LISTER_ROLE = keccak256(\\\"LISTER_ROLE\\\");\\n\\n    struct MarketItem {\\n        address seller; // Seller address\\n        address buyer; // Buyer address\\n        uint256 price; // Listed price\\n        uint256 timeListed; // listing time\\n        bool canBid; // Auction switch\\n        address highestBidder; // Highest bidder\\n        uint256 highestBid; // Highest bid amount\\n    }\\n\\n    struct InstallmentData {\\n        uint256 downPayment;\\n        uint256 monthlyAmount;\\n        uint256 remainingAmount;\\n        uint256 paidAmount;\\n        uint256 paymentDeadline;\\n    }\\n\\n    mapping(uint256 => MarketItem) public items; // property listing\\n    mapping(uint256 => InstallmentData) public installment; // property listing\\n\\n    event BuyProperty(address indexed buyer, uint256 tokenId, uint256 price);\\n    event PropertyListed(address indexed seller, uint256 tokenId, uint256 price, bool canBid);\\n    event CancelSelling(address indexed seller, uint256 tokenId);\\n    event PriceUpdated(address indexed seller, uint256 tokenId, uint256 price);\\n    event BidPlaced(uint256 tokenId, address indexed bidder, uint256 amount);\\n    event BidAccepted(uint256 tokenId, address indexed seller, address indexed bidder, uint256 amount);\\n    event BidRejected(uint256 tokenId, address indexed seller, address indexed bidder, uint256 amount);\\n    event BidWithdrawn(uint256 tokenId, address indexed bidder, uint256 amount);\\n    event PaymentMade(address indexed buyer, uint256 tokenId, uint256 _montlyAmount, uint256 _remainingAmount);\\n\\n    constructor() Ownable(msg.sender) {}\\n\\n    function initialize() external initializer {\\n        _transferOwnership(_msgSender());\\n        taxFees = 3;\\n        periodInMonth = 60; // 5 years = 60 months\\n        isTax = true;\\n        taxReceiver = 0xE1F317EfbC93d0E8C8F338F6f64973018eb9d4de;\\n        TUSDCtoken = IERC20(0x77efF133ed48A27B04545F73A17348DA4fbDDf02);\\n        percentage_downPayment = 20;\\n        _grantRole(DEFAULT_ADMIN_ROLE, owner());\\n        _grantRole(LISTER_ROLE, owner());\\n    }\\n\\n    // Buy property from the marketplace\\n    function buyProperty(uint256 _tokenId, uint256 _price) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(listing.buyer == address(0), \\\"buyProperty: Property already bought\\\");\\n        require(listing.price == _price, \\\"buyProperty: Wrong price\\\");\\n        require(listing.seller != address(0), \\\"buyProperty: Item not listed on the marketplace\\\");\\n        require(listing.seller != msg.sender, \\\"buyProperty: You cannot buy a item that you listed\\\");\\n        require(TUSDCtoken.balanceOf(msg.sender) >= listing.price, \\\"buyProperty:  USDC balance is insufficent\\\");\\n        if (isTax) {\\n            uint256 amountToTaxReceiver = (listing.price * taxFees) / 100;\\n            uint256 amountToSeller = listing.price - amountToTaxReceiver;\\n            TUSDCtoken.transferFrom(msg.sender, taxReceiver, amountToTaxReceiver);\\n            TUSDCtoken.transferFrom(msg.sender, listing.seller, amountToSeller);\\n        } else {\\n            TUSDCtoken.transferFrom(msg.sender, taxReceiver, listing.price);\\n        }\\n\\n        if (listing.highestBidder != address(0)) {\\n            TUSDCtoken.transfer(listing.highestBidder, listing.highestBid);\\n        }\\n        propertyNFT.transferFrom(address(this), msg.sender, _tokenId);\\n        delete items[_tokenId];\\n        emit BuyProperty(msg.sender, _tokenId, listing.price);\\n    }\\n\\n    // List property on the marketplace for users who have the property NFT\\n    function listProperty(uint256 _tokenId, uint256 _price, bool _canBid) external whenNotPaused {\\n        require(_price < TUSDCtoken.totalSupply(), \\\"listProperty: The price cannot exceed USDC total supply\\\");\\n        require(propertyNFT.ownerOf(_tokenId) == msg.sender, \\\"listProperty: You don't own this NFT property\\\");\\n\\n        propertyNFT.transferFrom(msg.sender, address(this), _tokenId);\\n        items[_tokenId] = MarketItem(msg.sender, address(0), _price, block.timestamp, _canBid, address(0), 0);\\n        emit PropertyListed(msg.sender, _tokenId, _price, _canBid);\\n    }\\n\\n    // Create property listing for users who do not have the property NFT\\n    function createProperty(address lister, uint256 _tokenId, uint256 _price, bool _canBid) external whenNotPaused {\\n        require(hasRole(LISTER_ROLE, msg.sender), \\\"createProperty: Caller do not have lister role\\\");\\n        //require(_price<=USDCtoken.totalSupply(), \\\"CreateProperty: The price cannot exceed USDC total supply\\\");\\n\\n        items[_tokenId] = MarketItem(lister, address(0), _price, block.timestamp, _canBid, address(0), 0);\\n        emit PropertyListed(lister, _tokenId, _price, _canBid);\\n    }\\n\\n    // Update property price\\n    function updatePrice(uint256 _tokenId, uint256 _price) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(_price < TUSDCtoken.totalSupply(), \\\"updatePrice: Price can not exceed USDC total supply\\\");\\n        require(items[_tokenId].seller == msg.sender, \\\"updatePrice: You don't own this property NFT in the Market\\\");\\n        require(listing.buyer == address(0), \\\"updatePrice: Property already bought\\\");\\n        items[_tokenId].price = _price;\\n        emit PriceUpdated(msg.sender, _tokenId, _price);\\n    }\\n\\n    // Cancel property listing\\n    function cancelSelling(uint256 _tokenId) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(items[_tokenId].seller == msg.sender, \\\"cancelSelling: You don't own this nft in the Market\\\");\\n        require(listing.buyer == address(0), \\\"cancelSelling: Property already bought\\\");\\n        if (listing.highestBidder != address(0)) {\\n            TUSDCtoken.transfer(listing.highestBidder, listing.highestBid);\\n        }\\n        propertyNFT.transferFrom(address(this), msg.sender, _tokenId);\\n        delete items[_tokenId];\\n        emit CancelSelling(msg.sender, _tokenId);\\n    }\\n\\n    // Place bid on the property\\n    function placeBid(uint256 _tokenId, uint256 bidAmount) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(listing.buyer == address(0), \\\"placeBid: Property already bought\\\");\\n        require(listing.canBid, \\\"placeBid: You cannot bid on this token\\\");\\n        require(bidAmount > listing.highestBid, \\\"placeBid: Bid amount must be higher\\\");\\n        require(listing.seller != msg.sender, \\\"placeBid: You cannot bid on your own listing\\\");\\n\\n        if (listing.highestBidder != address(0)) {\\n            TUSDCtoken.transfer(listing.highestBidder, listing.highestBid);\\n        }\\n        TUSDCtoken.transferFrom(msg.sender, address(this), bidAmount);\\n        items[_tokenId].highestBidder = msg.sender;\\n        items[_tokenId].highestBid = bidAmount;\\n\\n        emit BidPlaced(_tokenId, msg.sender, bidAmount);\\n    }\\n\\n    // Accept bid on the property\\n    function acceptBid(uint256 _tokenId) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(listing.buyer == address(0), \\\"acceptBid: Property already bought\\\");\\n        require(listing.canBid, \\\"acceptBid: You cannot bid on this token\\\");\\n        require(listing.highestBidder != address(0), \\\"acceptBid: No bids to accept\\\");\\n        require(listing.seller == msg.sender, \\\"acceptBid: You afre not the owner of this NFT on the marketplace\\\");\\n        propertyNFT.transferFrom(address(this), listing.highestBidder, _tokenId);\\n        if (isTax) {\\n            uint256 amountToTaxReceiver = (listing.highestBid * taxFees) / 100;\\n            uint256 amountToSeller = listing.highestBid - amountToTaxReceiver;\\n            TUSDCtoken.transfer(taxReceiver, amountToTaxReceiver);\\n            TUSDCtoken.transfer(msg.sender, amountToSeller);\\n        } else {\\n            TUSDCtoken.transfer(msg.sender, listing.highestBid);\\n        }\\n\\n        delete items[_tokenId];\\n        emit BidAccepted(_tokenId, msg.sender, listing.highestBidder, listing.highestBid);\\n    }\\n\\n    // Reject bid on the property\\n    function rejectBid(uint256 _tokenId) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(listing.buyer == address(0), \\\"rejectBid: Property already bought\\\");\\n        require(listing.canBid, \\\"rejectBid: You cannot bid on this token\\\");\\n        require(listing.highestBidder != address(0), \\\"rejectBid: No bids to reject\\\");\\n        require(listing.seller == msg.sender, \\\"rejectBid: You afre not the owner of this NFT on the marketplace\\\");\\n\\n        TUSDCtoken.transfer(listing.highestBidder, listing.highestBid);\\n        // Reset the bid information\\n        items[_tokenId].highestBidder = address(0);\\n        items[_tokenId].highestBid = 0;\\n\\n        emit BidRejected(_tokenId, listing.seller, listing.highestBidder, listing.highestBid);\\n    }\\n\\n    // Withdraw bid on the property\\n    function withdrawBid(uint256 _tokenId) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        require(listing.buyer == address(0), \\\"withdrawBid: Property already bought\\\");\\n        require(listing.canBid, \\\"withdrawBid: You cannot bid on this token\\\");\\n        require(listing.highestBidder == msg.sender, \\\"withdrawBid: You are not the highest bidder\\\");\\n\\n        TUSDCtoken.transfer(listing.highestBidder, listing.highestBid);\\n        // Clear the bid\\n        items[_tokenId].highestBidder = address(0);\\n        items[_tokenId].highestBid = 0;\\n\\n        emit BidWithdrawn(_tokenId, msg.sender, listing.highestBid);\\n    }\\n\\n    // Buy property with installment\\n    function buyWithInstallment(uint256 _tokenId, uint256 _price) external whenNotPaused {\\n        MarketItem storage listing = items[_tokenId];\\n        uint256 downPayment = (listing.price * percentage_downPayment) / 100;\\n        require(listing.buyer == address(0), \\\"buyWithInstallment: Property already bought\\\");\\n        require(listing.price == _price, \\\"buyWithInstallment: Wrong price\\\");\\n        require(listing.seller != address(0), \\\"buyWithInstallment: Item not listed on the marketplace\\\");\\n        require(listing.seller != msg.sender, \\\"buyWithInstallment: You cannot buy a item that you listed\\\");\\n        require(TUSDCtoken.balanceOf(msg.sender) >= downPayment, \\\"makePayment: Your tUSDC balance is insufficent\\\");\\n\\n        if (isTax) {\\n            uint256 amountToTaxReceiver = (downPayment * taxFees) / 100;\\n            uint256 amountToSeller = downPayment - amountToTaxReceiver;\\n            TUSDCtoken.transferFrom(msg.sender, taxReceiver, amountToTaxReceiver);\\n            TUSDCtoken.transferFrom(msg.sender, listing.seller, amountToSeller);\\n        } else {\\n            TUSDCtoken.transferFrom(msg.sender, listing.seller, downPayment);\\n        }\\n\\n        if (listing.highestBidder != address(0)) {\\n            TUSDCtoken.transfer(listing.highestBidder, listing.highestBid);\\n        }\\n\\n        items[_tokenId].buyer = msg.sender;\\n        installment[_tokenId].downPayment = downPayment;\\n        installment[_tokenId].paidAmount = downPayment;\\n        installment[_tokenId].remainingAmount = listing.price - downPayment;\\n        installment[_tokenId].monthlyAmount = (listing.price - downPayment) / periodInMonth;\\n        installment[_tokenId].paymentDeadline = block.timestamp + 40 days;\\n\\n        emit BuyProperty(msg.sender, _tokenId, listing.price);\\n    }\\n\\n    // Make installment payment\\n    function makePayment(uint256 _tokenId) external whenNotPaused nonReentrant {\\n        MarketItem storage listing = items[_tokenId];\\n        InstallmentData storage installmentInfo = installment[_tokenId];\\n        require(listing.buyer == msg.sender, \\\"makePayment: This poperty is not yours\\\");\\n        require(\\n            TUSDCtoken.balanceOf(msg.sender) >= installmentInfo.monthlyAmount,\\n            \\\"makePayment: Your balance is insufficient\\\"\\n        );\\n        require(installmentInfo.paymentDeadline >= block.timestamp, \\\"makePayment: Deadline has passed\\\");\\n\\n        TUSDCtoken.transferFrom(msg.sender, listing.seller, installmentInfo.monthlyAmount);\\n        installment[_tokenId].paidAmount += installmentInfo.monthlyAmount;\\n        installment[_tokenId].remainingAmount -= installmentInfo.monthlyAmount;\\n        installment[_tokenId].paymentDeadline += 30 days;\\n\\n        if (installmentInfo.remainingAmount == 0) {\\n            propertyNFT.transferFrom(address(this), msg.sender, _tokenId);\\n            delete items[_tokenId];\\n            delete installment[_tokenId];\\n        }\\n        emit PaymentMade(msg.sender, _tokenId, installmentInfo.monthlyAmount, installmentInfo.remainingAmount);\\n    }\\n\\n    // Get down payment\\n    function getDownPayment(uint256 _tokenId) external view returns (uint256) {\\n        MarketItem memory listing = items[_tokenId];\\n        uint256 downPayment = (listing.price * percentage_downPayment) / 100;\\n        return downPayment;\\n    }\\n\\n    // Get monthly payment\\n    function getMonthlyPayment(uint256 _tokenId) external view returns (uint256) {\\n        MarketItem memory listing = items[_tokenId];\\n        uint256 downPayment = (listing.price * percentage_downPayment) / 100;\\n        uint256 monthlyPayment = (listing.price - downPayment) / periodInMonth;\\n        return monthlyPayment;\\n    }\\n\\n    // Get property market informations\\n    function getMarketItem(uint256 _tokenId) external view returns (MarketItem memory) {\\n        MarketItem memory listing = items[_tokenId];\\n        return listing;\\n    }\\n\\n    // Batch get property market informations\\n    function getBatchMarketItem(uint256[] memory _tokenId) external view returns (MarketItem[] memory) {\\n        MarketItem[] memory listing = new MarketItem[](_tokenId.length);\\n        for (uint256 i = 0; i < _tokenId.length; i++) {\\n            listing[i] = items[_tokenId[i]];\\n        }\\n        return listing;\\n    }\\n\\n    // Withdraw NFT\\n    function withdrawNFT(address to, uint256 _tokenId) external onlyOwner {\\n        propertyNFT.transferFrom(address(this), to, _tokenId);\\n    }\\n\\n    // Withdraw USDC\\n    function withdrawUSDC(address to, uint256 amount) external onlyOwner {\\n        TUSDCtoken.transfer(to, amount);\\n    }\\n\\n    // Grant lister role\\n    function grantListerRole(address _minter) public onlyOwner {\\n        _grantRole(LISTER_ROLE, _minter);\\n    }\\n\\n    // Set USDC token\\n    function setUSDC(IERC20 _token) external onlyOwner {\\n        TUSDCtoken = IERC20(_token);\\n    }\\n\\n    // Set tax switch\\n    function setIsTax(bool _on) external onlyOwner {\\n        isTax = _on;\\n    }\\n\\n    // Set tax fees\\n    function setTaxFees(uint256 _taxFees) external onlyOwner {\\n        taxFees = _taxFees;\\n    }\\n\\n    // Set installment period\\n    function setPeriodInMonth(uint256 _months) external onlyOwner {\\n        periodInMonth = _months;\\n    }\\n\\n    // Set tax receiver\\n    function setTaxReceiver(address _taxReceiver) external onlyOwner {\\n        taxReceiver = _taxReceiver;\\n    }\\n\\n    // Set property NFT\\n    function setPopertyNFT(address _nftAddress) external onlyOwner {\\n        propertyNFT = IERC721(_nftAddress);\\n    }\\n\\n    // Set percentage downpayment\\n    function setPercentage_downPayment(uint256 _percent) external onlyOwner {\\n        percentage_downPayment = _percent;\\n    }\\n\\n    // ERC721 receiver\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external pure override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0xf7348b5a3672c0b56370b458d26cc20a31c0b86d1a7df22e30d06918f3d38d55\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5033806200003957604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000448162000059565b50600180556002805460ff19169055620000a9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613d0080620000b96000396000f3fe608060405234801561001057600080fd5b50600436106102a05760003560e01c80636c20f3b111610167578063a772c927116100ce578063d547741f11610087578063d547741f1461078b578063deb26b941461079e578063e2f23d99146107b3578063e6ef73d6146107c6578063e8ef4234146107d9578063f2fde38b146107ec57600080fd5b8063a772c927146105d3578063b3e089a2146105e6578063bfb231d2146105f9578063c1e549201461069a578063c7be7a49146106ad578063cd8de42c1461077857600080fd5b80638129fc1c116101205780638129fc1c1461057957806382367b2d146105815780638d5a29c5146105945780638da5cb5b146105a757806391d14854146105b8578063a217fddf146105cb57600080fd5b80636c20f3b1146104ca5780636e3341b3146104dd578063715018a6146104f0578063781ec44d146104f85780637865405c146105015780637a26d2301461056657600080fd5b806337f768381161020b57806352f1a42e116101c457806352f1a42e146104535780635368f8421461047357806357c90de5146104865780635c975abb146104995780636088e93a146104a457806368aa21ac146104b757600080fd5b806337f76838146103d35780633f598eaa146103fe57806343886f3d1461040757806344471fd91461041a5780634766aed01461042d5780635114cb521461044057600080fd5b80631f29b9d51161025d5780631f29b9d514610351578063248a9ca3146103645780632b1fd58a146103875780632f2ff15d1461039a5780632f33df60146103ad57806336568abe146103c057600080fd5b806301ffc9a7146102a55780630ddc0976146102cd5780630eaaf4c8146102e4578063150b7a02146102f957806318c9323e146103315780631de70ebd14610344575b600080fd5b6102b86102b33660046137ab565b6107ff565b60405190151581526020015b60405180910390f35b6102d660075481565b6040519081526020016102c4565b6102f76102f23660046137dc565b610836565b005b61031861030736600461380a565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016102c4565b6102f761033f3660046138a9565b610a84565b6008546102b89060ff1681565b6102f761035f3660046138a9565b610aae565b6102d66103723660046137dc565b60009081526003602052604090206001015490565b6102f76103953660046137dc565b610ad2565b6102f76103a83660046138c6565b610f68565b6102f76103bb3660046137dc565b610f93565b6102f76103ce3660046138c6565b61120e565b6004546103e6906001600160a01b031681565b6040516001600160a01b0390911681526020016102c4565b6102d6600a5481565b6102f76104153660046138f6565b611246565b6102f7610428366004613918565b61184d565b6102f761043b366004613952565b6118ca565b6102f761044e3660046137dc565b611c1c565b6104666104613660046139a1565b612017565b6040516102c49190613ab3565b6006546103e6906001600160a01b031681565b6102f76104943660046138f6565b61217a565b60025460ff166102b8565b6102f76104b2366004613918565b6124a9565b6102d66104c53660046137dc565b61251a565b6102f76104d83660046137dc565b6125ae565b6102f76104eb3660046137dc565b6125bb565b6102f761287c565b6102d660095481565b61053e61050f3660046137dc565b600c60205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016102c4565b6102f76105743660046137dc565b612890565b6102f761289d565b6102f761058f3660046138f6565b612a52565b6102f76105a2366004613b01565b612c7e565b6000546001600160a01b03166103e6565b6102b86105c63660046138c6565b612e14565b6102d6600081565b6102f76105e13660046138f6565b612e3f565b6102f76105f43660046138a9565b613418565b6106546106073660046137dc565b600b602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949293919260ff8316926101009004169087565b604080516001600160a01b039889168152968816602088015286019490945260608501929092521515608084015290921660a082015260c081019190915260e0016102c4565b6102f76106a83660046137dc565b613442565b61076b6106bb3660046137dc565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506000908152600b6020908152604091829020825160e08101845281546001600160a01b039081168252600183015481169382019390935260028201549381019390935260038101546060840152600481015460ff811615156080850152610100900490911660a08301526005015460c082015290565b6040516102c49190613b4b565b6102f76107863660046138a9565b61344f565b6102f76107993660046138c6565b613479565b6102d6600080516020613cab83398151915281565b6102f76107c1366004613b59565b61349e565b6005546103e6906001600160a01b031681565b6102d66107e73660046137dc565b6134b9565b6102f76107fa3660046138a9565b61356f565b60006001600160e01b03198216637965db0b60e01b148061083057506301ffc9a760e01b6001600160e01b03198316145b92915050565b61083e6135aa565b6000818152600b6020526040902060018101546001600160a01b0316156108b85760405162461bcd60e51b8152602060048201526024808201527f77697468647261774269643a2050726f706572747920616c726561647920626f6044820152631d59da1d60e21b60648201526084015b60405180910390fd5b600481015460ff1661091e5760405162461bcd60e51b815260206004820152602960248201527f77697468647261774269643a20596f752063616e6e6f7420626964206f6e20746044820152683434b9903a37b5b2b760b91b60648201526084016108af565b600481015461010090046001600160a01b031633146109935760405162461bcd60e51b815260206004820152602b60248201527f77697468647261774269643a20596f7520617265206e6f74207468652068696760448201526a3432b9ba103134b23232b960a91b60648201526084016108af565b600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946109d4946101009004909116929101613b76565b6020604051808303816000875af11580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a179190613b8f565b506000828152600b60209081526040808320600481018054610100600160a81b03191690556005908101939093559183015482518581529182015233917f8f8619524e8d462cead34604bd2247ede24175801481e4d0b8059ac8aa41c30191015b60405180910390a25050565b610a8c6135ce565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610ab66135ce565b610ace600080516020613cab833981519152826135fb565b5050565b610ada6135aa565b6000818152600b6020526040902060018101546001600160a01b031615610b4e5760405162461bcd60e51b815260206004820152602260248201527f6163636570744269643a2050726f706572747920616c726561647920626f75676044820152611a1d60f21b60648201526084016108af565b600481015460ff16610bb25760405162461bcd60e51b815260206004820152602760248201527f6163636570744269643a20596f752063616e6e6f7420626964206f6e2074686960448201526639903a37b5b2b760c91b60648201526084016108af565b600481015461010090046001600160a01b0316610c115760405162461bcd60e51b815260206004820152601c60248201527f6163636570744269643a204e6f206269647320746f206163636570740000000060448201526064016108af565b80546001600160a01b03163314610c92576040805162461bcd60e51b81526020600482015260248101919091527f6163636570744269643a20596f752061667265206e6f7420746865206f776e6560448201527f72206f662074686973204e4654206f6e20746865206d61726b6574706c61636560648201526084016108af565b60048054828201546040516323b872dd60e01b81526001600160a01b03928316936323b872dd93610cd193309361010090910490911691889101613bac565b600060405180830381600087803b158015610ceb57600080fd5b505af1158015610cff573d6000803e3d6000fd5b505060085460ff16159150610e3d905057600060646007548360050154610d269190613be6565b610d309190613bfd565b90506000818360050154610d449190613c1f565b60065460055460405163a9059cbb60e01b81529293506001600160a01b039182169263a9059cbb92610d7c9216908690600401613b76565b6020604051808303816000875af1158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf9190613b8f565b5060065460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610df29033908590600401613b76565b6020604051808303816000875af1158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190613b8f565b505050610eb8565b600654600582015460405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb91610e7391339190600401613b76565b6020604051808303816000875af1158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190613b8f565b505b6000828152600b602052604080822080546001600160a01b0319908116825560018201805490911690556002810183905560038101839055600480820180546001600160a81b0319169055600591820193909355918301549183015490516101009092046001600160a01b03169133917fe6d56779a392535d3a591e92b65ba36f2ecc424bbf5220d0176a7da29385b50491610f5c91878252602082015260400190565b60405180910390a35050565b600082815260036020526040902060010154610f838161368f565b610f8d83836135fb565b50505050565b610f9b6135aa565b6000818152600b6020526040902080546001600160a01b0316331461101e5760405162461bcd60e51b815260206004820152603360248201527f63616e63656c53656c6c696e673a20596f7520646f6e2774206f776e207468696044820152721cc81b999d081a5b881d1a194813585c9ad95d606a1b60648201526084016108af565b60018101546001600160a01b0316156110885760405162461bcd60e51b815260206004820152602660248201527f63616e63656c53656c6c696e673a2050726f706572747920616c726561647920604482015265189bdd59da1d60d21b60648201526084016108af565b600481015461010090046001600160a01b03161561112657600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946110e1946101009004909116929101613b76565b6020604051808303816000875af1158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190613b8f565b505b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916111599130913391889101613bac565b600060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b5050506000838152600b602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810180546001600160a81b031916905560050191909155513391507ff2c2a87e9062cbb4cd7d542f259d5eb39fdc7bdf9789a20d96e24249d83197e090610a789085815260200190565b6001600160a01b03811633146112375760405163334bd91960e11b815260040160405180910390fd5b6112418282613699565b505050565b61124e6135aa565b6000828152600b60205260408120600a54600282015491929160649161127391613be6565b61127d9190613bfd565b60018301549091506001600160a01b0316156112ef5760405162461bcd60e51b815260206004820152602b60248201527f62757957697468496e7374616c6c6d656e743a2050726f706572747920616c7260448201526a1958591e48189bdd59da1d60aa1b60648201526084016108af565b828260020154146113425760405162461bcd60e51b815260206004820152601f60248201527f62757957697468496e7374616c6c6d656e743a2057726f6e672070726963650060448201526064016108af565b81546001600160a01b03166113b85760405162461bcd60e51b815260206004820152603660248201527f62757957697468496e7374616c6c6d656e743a204974656d206e6f74206c6973604482015275746564206f6e20746865206d61726b6574706c61636560501b60648201526084016108af565b8154336001600160a01b03909116036114395760405162461bcd60e51b815260206004820152603960248201527f62757957697468496e7374616c6c6d656e743a20596f752063616e6e6f74206260448201527f75792061206974656d207468617420796f75206c69737465640000000000000060648201526084016108af565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a59190613c32565b101561150a5760405162461bcd60e51b815260206004820152602e60248201527f6d616b655061796d656e743a20596f75722074555344432062616c616e63652060448201526d1a5cc81a5b9cdd59999a58d95b9d60921b60648201526084016108af565b60085460ff16156116415760006064600754836115279190613be6565b6115319190613bfd565b9050600061153f8284613c1f565b6006546005546040516323b872dd60e01b81529293506001600160a01b03918216926323b872dd9261157a9233929116908790600401613bac565b6020604051808303816000875af1158015611599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bd9190613b8f565b5060065484546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926115f6923392909116908690600401613bac565b6020604051808303816000875af1158015611615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116399190613b8f565b5050506116be565b60065482546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92611679923392909116908690600401613bac565b6020604051808303816000875af1158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc9190613b8f565b505b600482015461010090046001600160a01b03161561175c57600654600480840154600585015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb94611717946101009004909116929101613b76565b6020604051808303816000875af1158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a9190613b8f565b505b6000848152600b6020908152604080832060010180546001600160a01b03191633179055600c909152902081815560030181905560028201546117a0908290613c1f565b6000858152600c60205260409020600290810191909155600954908301546117c9908390613c1f565b6117d39190613bfd565b6000858152600c60205260409020600101556117f2426234bc00613c4b565b6000858152600c602090815260409182902060040192909255600284015481518781529283015233917f75decf89a96d485b07819128c69cca58057a61ec52a8ec4b406b16e9e0c701a491015b60405180910390a250505050565b6118556135ce565b60065460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906118879085908590600401613b76565b6020604051808303816000875af11580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190613b8f565b6118d26135aa565b600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119499190613c32565b82106119bd5760405162461bcd60e51b815260206004820152603760248201527f6c69737450726f70657274793a205468652070726963652063616e6e6f74206560448201527f7863656564205553444320746f74616c20737570706c7900000000000000000060648201526084016108af565b600480546040516331a9108f60e11b815291820185905233916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2c9190613c5e565b6001600160a01b031614611a985760405162461bcd60e51b815260206004820152602d60248201527f6c69737450726f70657274793a20596f7520646f6e2774206f776e207468697360448201526c204e46542070726f706572747960981b60648201526084016108af565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91611acb9133913091899101613bac565b600060405180830381600087803b158015611ae557600080fd5b505af1158015611af9573d6000803e3d6000fd5b50506040805160e08101825233808252600060208084018281528486018a815242606087019081528a15156080880190815260a0880186815260c089018781528f8852600b90965295899020975188546001600160a01b039182166001600160a01b0319918216178a55945160018a01805491831691909616179094559151600288015551600387015551600486018054945190921661010002610100600160a81b0319911515919091166001600160a81b031990941693909317929092179091555160059092019190915590519092507fe26548fdade34bdea4845eabc1ce353ae8487b41fb41e06f86a94a00583ea6959150611c0f9086908690869092835260208301919091521515604082015260600190565b60405180910390a2505050565b611c246135aa565b611c2c613706565b6000818152600b60209081526040808320600c90925290912060018201546001600160a01b03163314611cb05760405162461bcd60e51b815260206004820152602660248201527f6d616b655061796d656e743a205468697320706f7065727479206973206e6f7460448201526520796f75727360d01b60648201526084016108af565b60018101546006546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d219190613c32565b1015611d815760405162461bcd60e51b815260206004820152602960248201527f6d616b655061796d656e743a20596f75722062616c616e636520697320696e736044820152681d59999a58da595b9d60ba1b60648201526084016108af565b4281600401541015611dd55760405162461bcd60e51b815260206004820181905260248201527f6d616b655061796d656e743a20446561646c696e65206861732070617373656460448201526064016108af565b600654825460018301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd93611e119333939290911691600401613bac565b6020604051808303816000875af1158015611e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e549190613b8f565b5060018101546000848152600c602052604081206003018054909190611e7b908490613c4b565b909155505060018101546000848152600c602052604081206002018054909190611ea6908490613c1f565b90915550506000838152600c60205260408120600401805462278d009290611ecf908490613c4b565b90915550506002810154600003611fbe57600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91611f139130913391899101613bac565b600060405180830381600087803b158015611f2d57600080fd5b505af1158015611f41573d6000803e3d6000fd5b5050506000848152600b6020908152604080832080546001600160a01b031990811682556001808301805490921690915560028083018690556003808401879055600480850180546001600160a81b03191690556005909401879055600c9095529285208581559081018590559182018490559181018390550155505b6001810154600282015460408051868152602081019390935282015233907f8e4aa0897527f9d5629d6daf3255e753bfdd9862c1b9803c200a8bd12d5b86259060600160405180910390a2505061201460018055565b50565b60606000825167ffffffffffffffff8111156120355761203561398b565b60405190808252806020026020018201604052801561209c57816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282526000199092019101816120535790505b50905060005b835181101561217357600b60008583815181106120c1576120c1613c7b565b6020908102919091018101518252818101929092526040908101600020815160e08101835281546001600160a01b039081168252600183015481169482019490945260028201549281019290925260038101546060830152600481015460ff811615156080840152610100900490921660a082015260059091015460c0820152825183908390811061215557612155613c7b565b6020026020010181905250808061216b90613c91565b9150506120a2565b5092915050565b6121826135aa565b6000828152600b6020526040902060018101546001600160a01b0316156121f55760405162461bcd60e51b815260206004820152602160248201527f706c6163654269643a2050726f706572747920616c726561647920626f7567686044820152601d60fa1b60648201526084016108af565b600481015460ff166122585760405162461bcd60e51b815260206004820152602660248201527f706c6163654269643a20596f752063616e6e6f7420626964206f6e2074686973604482015265103a37b5b2b760d11b60648201526084016108af565b806005015482116122b75760405162461bcd60e51b815260206004820152602360248201527f706c6163654269643a2042696420616d6f756e74206d757374206265206869676044820152623432b960e91b60648201526084016108af565b8054336001600160a01b03909116036123275760405162461bcd60e51b815260206004820152602c60248201527f706c6163654269643a20596f752063616e6e6f7420626964206f6e20796f757260448201526b206f776e206c697374696e6760a01b60648201526084016108af565b600481015461010090046001600160a01b0316156123c557600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb94612380946101009004909116929101613b76565b6020604051808303816000875af115801561239f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c39190613b8f565b505b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906123f990339030908790600401613bac565b6020604051808303816000875af1158015612418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243c9190613b8f565b506000838152600b6020908152604091829020600481018054610100600160a81b0319163361010081029190911790915560059091018590558251868152918201859052917f0e54eff26401bf69b81b26f60bd85ef47f5d85275c1d268d84f68d6897431c479101611c0f565b6124b16135ce565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916124e49130918791879101613bac565b600060405180830381600087803b1580156124fe57600080fd5b505af1158015612512573d6000803e3d6000fd5b505050505050565b6000818152600b60209081526040808320815160e08101835281546001600160a01b0390811682526001830154811694820194909452600282015492810183905260038201546060820152600482015460ff811615156080830152610100900490931660a08401526005015460c0830152600a54839160649161259c91613be6565b6125a69190613bfd565b949350505050565b6125b66135ce565b600a55565b6125c36135aa565b6000818152600b6020526040902060018101546001600160a01b0316156126375760405162461bcd60e51b815260206004820152602260248201527f72656a6563744269643a2050726f706572747920616c726561647920626f75676044820152611a1d60f21b60648201526084016108af565b600481015460ff1661269b5760405162461bcd60e51b815260206004820152602760248201527f72656a6563744269643a20596f752063616e6e6f7420626964206f6e2074686960448201526639903a37b5b2b760c91b60648201526084016108af565b600481015461010090046001600160a01b03166126fa5760405162461bcd60e51b815260206004820152601c60248201527f72656a6563744269643a204e6f206269647320746f2072656a6563740000000060448201526064016108af565b80546001600160a01b0316331461277b576040805162461bcd60e51b81526020600482015260248101919091527f72656a6563744269643a20596f752061667265206e6f7420746865206f776e6560448201527f72206f662074686973204e4654206f6e20746865206d61726b6574706c61636560648201526084016108af565b600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946127bc946101009004909116929101613b76565b6020604051808303816000875af11580156127db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ff9190613b8f565b506000828152600b6020908152604080832060048082018054610100600160a81b0319169055600591820194909455928401548454938501548251878152938401526001600160a01b0361010090910481169316917f6d699e170cc72516120ba19fe48e744504798d1afc2ffb65ff1154a6f4fa4d159101610f5c565b6128846135ce565b61288e6000613730565b565b6128986135ce565b600755565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156128e35750825b905060008267ffffffffffffffff1660011480156129005750303b155b90508115801561290e575080155b1561292c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561295657845460ff60401b1916600160401b1785555b61295f33613730565b6003600755603c6009556008805460ff19166001179055600580546001600160a01b031990811673e1f317efbc93d0e8c8f338f6f64973018eb9d4de17909155600680549091167377eff133ed48a27b04545f73a17348da4fbddf021790556014600a556129df60006129da6000546001600160a01b031690565b6135fb565b50612a04600080516020613cab8339815191526129da6000546001600160a01b031690565b508315612a4b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b612a5a6135aa565b6000828152600b602090815260409182902060065483516318160ddd60e01b8152935191936001600160a01b03909116926318160ddd926004808401938290030181865afa158015612ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad49190613c32565b8210612b3e5760405162461bcd60e51b815260206004820152603360248201527f75706461746550726963653a2050726963652063616e206e6f7420657863656560448201527264205553444320746f74616c20737570706c7960681b60648201526084016108af565b6000838152600b60205260409020546001600160a01b03163314612bca5760405162461bcd60e51b815260206004820152603a60248201527f75706461746550726963653a20596f7520646f6e2774206f776e20746869732060448201527f70726f7065727479204e465420696e20746865204d61726b657400000000000060648201526084016108af565b60018101546001600160a01b031615612c315760405162461bcd60e51b8152602060048201526024808201527f75706461746550726963653a2050726f706572747920616c726561647920626f6044820152631d59da1d60e21b60648201526084016108af565b6000838152600b6020908152604091829020600201849055815185815290810184905233917fb556fac599c3c70efb9ab1fa725ecace6c81cc48d1455f886607def065f3e0c09101611c0f565b612c866135aa565b612c9e600080516020613cab83398151915233612e14565b612d015760405162461bcd60e51b815260206004820152602e60248201527f63726561746550726f70657274793a2043616c6c657220646f206e6f7420686160448201526d7665206c697374657220726f6c6560901b60648201526084016108af565b6040805160e0810182526001600160a01b038087168083526000602080850182815285870189815242606088019081528915156080890190815260a0890186815260c08a018781528e8852600b909652958a9020985189549089166001600160a01b0319918216178a55935160018a018054918a1691909516179093559051600288015551600387015551600486018054935190951661010002610100600160a81b0319911515919091166001600160a81b03199093169290921791909117909255905160059092019190915590517fe26548fdade34bdea4845eabc1ce353ae8487b41fb41e06f86a94a00583ea6959061183f9086908690869092835260208301919091521515604082015260600190565b60009182526003602090815260408084206001600160a01b0393909316845291905290205460ff1690565b612e476135aa565b6000828152600b6020526040902060018101546001600160a01b031615612ebc5760405162461bcd60e51b8152602060048201526024808201527f62757950726f70657274793a2050726f706572747920616c726561647920626f6044820152631d59da1d60e21b60648201526084016108af565b81816002015414612f0f5760405162461bcd60e51b815260206004820152601860248201527f62757950726f70657274793a2057726f6e67207072696365000000000000000060448201526064016108af565b80546001600160a01b0316612f7e5760405162461bcd60e51b815260206004820152602f60248201527f62757950726f70657274793a204974656d206e6f74206c6973746564206f6e2060448201526e746865206d61726b6574706c61636560881b60648201526084016108af565b8054336001600160a01b0390911603612ff45760405162461bcd60e51b815260206004820152603260248201527f62757950726f70657274793a20596f752063616e6e6f74206275792061206974604482015271195b481d1a185d081e5bdd481b1a5cdd195960721b60648201526084016108af565b60028101546006546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015613041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130659190613c32565b10156130c55760405162461bcd60e51b815260206004820152602960248201527f62757950726f70657274793a2020555344432062616c616e636520697320696e6044820152681cdd59999a58d95b9d60ba1b60648201526084016108af565b60085460ff1615613206576000606460075483600201546130e69190613be6565b6130f09190613bfd565b905060008183600201546131049190613c1f565b6006546005546040516323b872dd60e01b81529293506001600160a01b03918216926323b872dd9261313f9233929116908790600401613bac565b6020604051808303816000875af115801561315e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131829190613b8f565b5060065483546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926131bb923392909116908690600401613bac565b6020604051808303816000875af11580156131da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131fe9190613b8f565b505050613288565b60065460055460028301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd936132439333939290911691600401613bac565b6020604051808303816000875af1158015613262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132869190613b8f565b505b600481015461010090046001600160a01b03161561332657600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946132e1946101009004909116929101613b76565b6020604051808303816000875af1158015613300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133249190613b8f565b505b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916133599130913391899101613bac565b600060405180830381600087803b15801561337357600080fd5b505af1158015613387573d6000803e3d6000fd5b5050506000848152600b6020908152604080832080546001600160a01b0319908116825560018201805490911690556002808201859055600382018590556004820180546001600160a81b0319169055600590910193909355918401548251878152918201523392507f75decf89a96d485b07819128c69cca58057a61ec52a8ec4b406b16e9e0c701a49101611c0f565b6134206135ce565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61344a6135ce565b600955565b6134576135ce565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600360205260409020600101546134948161368f565b610f8d8383613699565b6134a66135ce565b6008805460ff1916911515919091179055565b6000818152600b60209081526040808320815160e08101835281546001600160a01b0390811682526001830154811694820194909452600282015492810183905260038201546060820152600482015460ff811615156080830152610100900490931660a08401526005015460c0830152600a54839160649161353b91613be6565b6135459190613bfd565b9050600060095482846040015161355c9190613c1f565b6135669190613bfd565b95945050505050565b6135776135ce565b6001600160a01b0381166135a157604051631e4fbdf760e01b8152600060048201526024016108af565b61201481613730565b60025460ff161561288e5760405163d93c066560e01b815260040160405180910390fd5b6000546001600160a01b0316331461288e5760405163118cdaa760e01b81523360048201526024016108af565b60006136078383612e14565b6136875760008381526003602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561363f3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610830565b506000610830565b6120148133613780565b60006136a58383612e14565b156136875760008381526003602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610830565b60026001540361372957604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61378a8282612e14565b610ace57808260405163e2517d3f60e01b81526004016108af929190613b76565b6000602082840312156137bd57600080fd5b81356001600160e01b0319811681146137d557600080fd5b9392505050565b6000602082840312156137ee57600080fd5b5035919050565b6001600160a01b038116811461201457600080fd5b60008060008060006080868803121561382257600080fd5b853561382d816137f5565b9450602086013561383d816137f5565b935060408601359250606086013567ffffffffffffffff8082111561386157600080fd5b818801915088601f83011261387557600080fd5b81358181111561388457600080fd5b89602082850101111561389657600080fd5b9699959850939650602001949392505050565b6000602082840312156138bb57600080fd5b81356137d5816137f5565b600080604083850312156138d957600080fd5b8235915060208301356138eb816137f5565b809150509250929050565b6000806040838503121561390957600080fd5b50508035926020909101359150565b6000806040838503121561392b57600080fd5b8235613936816137f5565b946020939093013593505050565b801515811461201457600080fd5b60008060006060848603121561396757600080fd5b8335925060208401359150604084013561398081613944565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156139b457600080fd5b823567ffffffffffffffff808211156139cc57600080fd5b818501915085601f8301126139e057600080fd5b8135818111156139f2576139f261398b565b8060051b604051601f19603f83011681018181108582111715613a1757613a1761398b565b604052918252848201925083810185019188831115613a3557600080fd5b938501935b82851015613a5357843584529385019392850192613a3a565b98975050505050505050565b60018060a01b0380825116835280602083015116602084015260408201516040840152606082015160608401526080820151151560808401528060a08301511660a08401525060c081015160c08301525050565b6020808252825182820181905260009190848201906040850190845b81811015613af557613ae2838551613a5f565b9284019260e09290920191600101613acf565b50909695505050505050565b60008060008060808587031215613b1757600080fd5b8435613b22816137f5565b935060208501359250604085013591506060850135613b4081613944565b939692955090935050565b60e081016108308284613a5f565b600060208284031215613b6b57600080fd5b81356137d581613944565b6001600160a01b03929092168252602082015260400190565b600060208284031215613ba157600080fd5b81516137d581613944565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761083057610830613bd0565b600082613c1a57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561083057610830613bd0565b600060208284031215613c4457600080fd5b5051919050565b8082018082111561083057610830613bd0565b600060208284031215613c7057600080fd5b81516137d5816137f5565b634e487b7160e01b600052603260045260246000fd5b600060018201613ca357613ca3613bd0565b506001019056fef94103142c1baabe9ac2b5d1487bf783de9e69cfeea9a72f5c9c94afd7877b8ca264697066735822122086c3631a458713612ef539d269d45ddcc9637ca2926ed8765abe21da24d34eb664736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102a05760003560e01c80636c20f3b111610167578063a772c927116100ce578063d547741f11610087578063d547741f1461078b578063deb26b941461079e578063e2f23d99146107b3578063e6ef73d6146107c6578063e8ef4234146107d9578063f2fde38b146107ec57600080fd5b8063a772c927146105d3578063b3e089a2146105e6578063bfb231d2146105f9578063c1e549201461069a578063c7be7a49146106ad578063cd8de42c1461077857600080fd5b80638129fc1c116101205780638129fc1c1461057957806382367b2d146105815780638d5a29c5146105945780638da5cb5b146105a757806391d14854146105b8578063a217fddf146105cb57600080fd5b80636c20f3b1146104ca5780636e3341b3146104dd578063715018a6146104f0578063781ec44d146104f85780637865405c146105015780637a26d2301461056657600080fd5b806337f768381161020b57806352f1a42e116101c457806352f1a42e146104535780635368f8421461047357806357c90de5146104865780635c975abb146104995780636088e93a146104a457806368aa21ac146104b757600080fd5b806337f76838146103d35780633f598eaa146103fe57806343886f3d1461040757806344471fd91461041a5780634766aed01461042d5780635114cb521461044057600080fd5b80631f29b9d51161025d5780631f29b9d514610351578063248a9ca3146103645780632b1fd58a146103875780632f2ff15d1461039a5780632f33df60146103ad57806336568abe146103c057600080fd5b806301ffc9a7146102a55780630ddc0976146102cd5780630eaaf4c8146102e4578063150b7a02146102f957806318c9323e146103315780631de70ebd14610344575b600080fd5b6102b86102b33660046137ab565b6107ff565b60405190151581526020015b60405180910390f35b6102d660075481565b6040519081526020016102c4565b6102f76102f23660046137dc565b610836565b005b61031861030736600461380a565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016102c4565b6102f761033f3660046138a9565b610a84565b6008546102b89060ff1681565b6102f761035f3660046138a9565b610aae565b6102d66103723660046137dc565b60009081526003602052604090206001015490565b6102f76103953660046137dc565b610ad2565b6102f76103a83660046138c6565b610f68565b6102f76103bb3660046137dc565b610f93565b6102f76103ce3660046138c6565b61120e565b6004546103e6906001600160a01b031681565b6040516001600160a01b0390911681526020016102c4565b6102d6600a5481565b6102f76104153660046138f6565b611246565b6102f7610428366004613918565b61184d565b6102f761043b366004613952565b6118ca565b6102f761044e3660046137dc565b611c1c565b6104666104613660046139a1565b612017565b6040516102c49190613ab3565b6006546103e6906001600160a01b031681565b6102f76104943660046138f6565b61217a565b60025460ff166102b8565b6102f76104b2366004613918565b6124a9565b6102d66104c53660046137dc565b61251a565b6102f76104d83660046137dc565b6125ae565b6102f76104eb3660046137dc565b6125bb565b6102f761287c565b6102d660095481565b61053e61050f3660046137dc565b600c60205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0016102c4565b6102f76105743660046137dc565b612890565b6102f761289d565b6102f761058f3660046138f6565b612a52565b6102f76105a2366004613b01565b612c7e565b6000546001600160a01b03166103e6565b6102b86105c63660046138c6565b612e14565b6102d6600081565b6102f76105e13660046138f6565b612e3f565b6102f76105f43660046138a9565b613418565b6106546106073660046137dc565b600b602052600090815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695938516949293919260ff8316926101009004169087565b604080516001600160a01b039889168152968816602088015286019490945260608501929092521515608084015290921660a082015260c081019190915260e0016102c4565b6102f76106a83660046137dc565b613442565b61076b6106bb3660046137dc565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810191909152506000908152600b6020908152604091829020825160e08101845281546001600160a01b039081168252600183015481169382019390935260028201549381019390935260038101546060840152600481015460ff811615156080850152610100900490911660a08301526005015460c082015290565b6040516102c49190613b4b565b6102f76107863660046138a9565b61344f565b6102f76107993660046138c6565b613479565b6102d6600080516020613cab83398151915281565b6102f76107c1366004613b59565b61349e565b6005546103e6906001600160a01b031681565b6102d66107e73660046137dc565b6134b9565b6102f76107fa3660046138a9565b61356f565b60006001600160e01b03198216637965db0b60e01b148061083057506301ffc9a760e01b6001600160e01b03198316145b92915050565b61083e6135aa565b6000818152600b6020526040902060018101546001600160a01b0316156108b85760405162461bcd60e51b8152602060048201526024808201527f77697468647261774269643a2050726f706572747920616c726561647920626f6044820152631d59da1d60e21b60648201526084015b60405180910390fd5b600481015460ff1661091e5760405162461bcd60e51b815260206004820152602960248201527f77697468647261774269643a20596f752063616e6e6f7420626964206f6e20746044820152683434b9903a37b5b2b760b91b60648201526084016108af565b600481015461010090046001600160a01b031633146109935760405162461bcd60e51b815260206004820152602b60248201527f77697468647261774269643a20596f7520617265206e6f74207468652068696760448201526a3432b9ba103134b23232b960a91b60648201526084016108af565b600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946109d4946101009004909116929101613b76565b6020604051808303816000875af11580156109f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a179190613b8f565b506000828152600b60209081526040808320600481018054610100600160a81b03191690556005908101939093559183015482518581529182015233917f8f8619524e8d462cead34604bd2247ede24175801481e4d0b8059ac8aa41c30191015b60405180910390a25050565b610a8c6135ce565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610ab66135ce565b610ace600080516020613cab833981519152826135fb565b5050565b610ada6135aa565b6000818152600b6020526040902060018101546001600160a01b031615610b4e5760405162461bcd60e51b815260206004820152602260248201527f6163636570744269643a2050726f706572747920616c726561647920626f75676044820152611a1d60f21b60648201526084016108af565b600481015460ff16610bb25760405162461bcd60e51b815260206004820152602760248201527f6163636570744269643a20596f752063616e6e6f7420626964206f6e2074686960448201526639903a37b5b2b760c91b60648201526084016108af565b600481015461010090046001600160a01b0316610c115760405162461bcd60e51b815260206004820152601c60248201527f6163636570744269643a204e6f206269647320746f206163636570740000000060448201526064016108af565b80546001600160a01b03163314610c92576040805162461bcd60e51b81526020600482015260248101919091527f6163636570744269643a20596f752061667265206e6f7420746865206f776e6560448201527f72206f662074686973204e4654206f6e20746865206d61726b6574706c61636560648201526084016108af565b60048054828201546040516323b872dd60e01b81526001600160a01b03928316936323b872dd93610cd193309361010090910490911691889101613bac565b600060405180830381600087803b158015610ceb57600080fd5b505af1158015610cff573d6000803e3d6000fd5b505060085460ff16159150610e3d905057600060646007548360050154610d269190613be6565b610d309190613bfd565b90506000818360050154610d449190613c1f565b60065460055460405163a9059cbb60e01b81529293506001600160a01b039182169263a9059cbb92610d7c9216908690600401613b76565b6020604051808303816000875af1158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf9190613b8f565b5060065460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610df29033908590600401613b76565b6020604051808303816000875af1158015610e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e359190613b8f565b505050610eb8565b600654600582015460405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb91610e7391339190600401613b76565b6020604051808303816000875af1158015610e92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb69190613b8f565b505b6000828152600b602052604080822080546001600160a01b0319908116825560018201805490911690556002810183905560038101839055600480820180546001600160a81b0319169055600591820193909355918301549183015490516101009092046001600160a01b03169133917fe6d56779a392535d3a591e92b65ba36f2ecc424bbf5220d0176a7da29385b50491610f5c91878252602082015260400190565b60405180910390a35050565b600082815260036020526040902060010154610f838161368f565b610f8d83836135fb565b50505050565b610f9b6135aa565b6000818152600b6020526040902080546001600160a01b0316331461101e5760405162461bcd60e51b815260206004820152603360248201527f63616e63656c53656c6c696e673a20596f7520646f6e2774206f776e207468696044820152721cc81b999d081a5b881d1a194813585c9ad95d606a1b60648201526084016108af565b60018101546001600160a01b0316156110885760405162461bcd60e51b815260206004820152602660248201527f63616e63656c53656c6c696e673a2050726f706572747920616c726561647920604482015265189bdd59da1d60d21b60648201526084016108af565b600481015461010090046001600160a01b03161561112657600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946110e1946101009004909116929101613b76565b6020604051808303816000875af1158015611100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111249190613b8f565b505b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916111599130913391889101613bac565b600060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b5050506000838152600b602052604080822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810180546001600160a81b031916905560050191909155513391507ff2c2a87e9062cbb4cd7d542f259d5eb39fdc7bdf9789a20d96e24249d83197e090610a789085815260200190565b6001600160a01b03811633146112375760405163334bd91960e11b815260040160405180910390fd5b6112418282613699565b505050565b61124e6135aa565b6000828152600b60205260408120600a54600282015491929160649161127391613be6565b61127d9190613bfd565b60018301549091506001600160a01b0316156112ef5760405162461bcd60e51b815260206004820152602b60248201527f62757957697468496e7374616c6c6d656e743a2050726f706572747920616c7260448201526a1958591e48189bdd59da1d60aa1b60648201526084016108af565b828260020154146113425760405162461bcd60e51b815260206004820152601f60248201527f62757957697468496e7374616c6c6d656e743a2057726f6e672070726963650060448201526064016108af565b81546001600160a01b03166113b85760405162461bcd60e51b815260206004820152603660248201527f62757957697468496e7374616c6c6d656e743a204974656d206e6f74206c6973604482015275746564206f6e20746865206d61726b6574706c61636560501b60648201526084016108af565b8154336001600160a01b03909116036114395760405162461bcd60e51b815260206004820152603960248201527f62757957697468496e7374616c6c6d656e743a20596f752063616e6e6f74206260448201527f75792061206974656d207468617420796f75206c69737465640000000000000060648201526084016108af565b6006546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015611481573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a59190613c32565b101561150a5760405162461bcd60e51b815260206004820152602e60248201527f6d616b655061796d656e743a20596f75722074555344432062616c616e63652060448201526d1a5cc81a5b9cdd59999a58d95b9d60921b60648201526084016108af565b60085460ff16156116415760006064600754836115279190613be6565b6115319190613bfd565b9050600061153f8284613c1f565b6006546005546040516323b872dd60e01b81529293506001600160a01b03918216926323b872dd9261157a9233929116908790600401613bac565b6020604051808303816000875af1158015611599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bd9190613b8f565b5060065484546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926115f6923392909116908690600401613bac565b6020604051808303816000875af1158015611615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116399190613b8f565b5050506116be565b60065482546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92611679923392909116908690600401613bac565b6020604051808303816000875af1158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc9190613b8f565b505b600482015461010090046001600160a01b03161561175c57600654600480840154600585015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb94611717946101009004909116929101613b76565b6020604051808303816000875af1158015611736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175a9190613b8f565b505b6000848152600b6020908152604080832060010180546001600160a01b03191633179055600c909152902081815560030181905560028201546117a0908290613c1f565b6000858152600c60205260409020600290810191909155600954908301546117c9908390613c1f565b6117d39190613bfd565b6000858152600c60205260409020600101556117f2426234bc00613c4b565b6000858152600c602090815260409182902060040192909255600284015481518781529283015233917f75decf89a96d485b07819128c69cca58057a61ec52a8ec4b406b16e9e0c701a491015b60405180910390a250505050565b6118556135ce565b60065460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906118879085908590600401613b76565b6020604051808303816000875af11580156118a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112419190613b8f565b6118d26135aa565b600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611925573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119499190613c32565b82106119bd5760405162461bcd60e51b815260206004820152603760248201527f6c69737450726f70657274793a205468652070726963652063616e6e6f74206560448201527f7863656564205553444320746f74616c20737570706c7900000000000000000060648201526084016108af565b600480546040516331a9108f60e11b815291820185905233916001600160a01b0390911690636352211e90602401602060405180830381865afa158015611a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a2c9190613c5e565b6001600160a01b031614611a985760405162461bcd60e51b815260206004820152602d60248201527f6c69737450726f70657274793a20596f7520646f6e2774206f776e207468697360448201526c204e46542070726f706572747960981b60648201526084016108af565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91611acb9133913091899101613bac565b600060405180830381600087803b158015611ae557600080fd5b505af1158015611af9573d6000803e3d6000fd5b50506040805160e08101825233808252600060208084018281528486018a815242606087019081528a15156080880190815260a0880186815260c089018781528f8852600b90965295899020975188546001600160a01b039182166001600160a01b0319918216178a55945160018a01805491831691909616179094559151600288015551600387015551600486018054945190921661010002610100600160a81b0319911515919091166001600160a81b031990941693909317929092179091555160059092019190915590519092507fe26548fdade34bdea4845eabc1ce353ae8487b41fb41e06f86a94a00583ea6959150611c0f9086908690869092835260208301919091521515604082015260600190565b60405180910390a2505050565b611c246135aa565b611c2c613706565b6000818152600b60209081526040808320600c90925290912060018201546001600160a01b03163314611cb05760405162461bcd60e51b815260206004820152602660248201527f6d616b655061796d656e743a205468697320706f7065727479206973206e6f7460448201526520796f75727360d01b60648201526084016108af565b60018101546006546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d219190613c32565b1015611d815760405162461bcd60e51b815260206004820152602960248201527f6d616b655061796d656e743a20596f75722062616c616e636520697320696e736044820152681d59999a58da595b9d60ba1b60648201526084016108af565b4281600401541015611dd55760405162461bcd60e51b815260206004820181905260248201527f6d616b655061796d656e743a20446561646c696e65206861732070617373656460448201526064016108af565b600654825460018301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd93611e119333939290911691600401613bac565b6020604051808303816000875af1158015611e30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e549190613b8f565b5060018101546000848152600c602052604081206003018054909190611e7b908490613c4b565b909155505060018101546000848152600c602052604081206002018054909190611ea6908490613c1f565b90915550506000838152600c60205260408120600401805462278d009290611ecf908490613c4b565b90915550506002810154600003611fbe57600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd91611f139130913391899101613bac565b600060405180830381600087803b158015611f2d57600080fd5b505af1158015611f41573d6000803e3d6000fd5b5050506000848152600b6020908152604080832080546001600160a01b031990811682556001808301805490921690915560028083018690556003808401879055600480850180546001600160a81b03191690556005909401879055600c9095529285208581559081018590559182018490559181018390550155505b6001810154600282015460408051868152602081019390935282015233907f8e4aa0897527f9d5629d6daf3255e753bfdd9862c1b9803c200a8bd12d5b86259060600160405180910390a2505061201460018055565b50565b60606000825167ffffffffffffffff8111156120355761203561398b565b60405190808252806020026020018201604052801561209c57816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c082015282526000199092019101816120535790505b50905060005b835181101561217357600b60008583815181106120c1576120c1613c7b565b6020908102919091018101518252818101929092526040908101600020815160e08101835281546001600160a01b039081168252600183015481169482019490945260028201549281019290925260038101546060830152600481015460ff811615156080840152610100900490921660a082015260059091015460c0820152825183908390811061215557612155613c7b565b6020026020010181905250808061216b90613c91565b9150506120a2565b5092915050565b6121826135aa565b6000828152600b6020526040902060018101546001600160a01b0316156121f55760405162461bcd60e51b815260206004820152602160248201527f706c6163654269643a2050726f706572747920616c726561647920626f7567686044820152601d60fa1b60648201526084016108af565b600481015460ff166122585760405162461bcd60e51b815260206004820152602660248201527f706c6163654269643a20596f752063616e6e6f7420626964206f6e2074686973604482015265103a37b5b2b760d11b60648201526084016108af565b806005015482116122b75760405162461bcd60e51b815260206004820152602360248201527f706c6163654269643a2042696420616d6f756e74206d757374206265206869676044820152623432b960e91b60648201526084016108af565b8054336001600160a01b03909116036123275760405162461bcd60e51b815260206004820152602c60248201527f706c6163654269643a20596f752063616e6e6f7420626964206f6e20796f757260448201526b206f776e206c697374696e6760a01b60648201526084016108af565b600481015461010090046001600160a01b0316156123c557600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb94612380946101009004909116929101613b76565b6020604051808303816000875af115801561239f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c39190613b8f565b505b6006546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906123f990339030908790600401613bac565b6020604051808303816000875af1158015612418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061243c9190613b8f565b506000838152600b6020908152604091829020600481018054610100600160a81b0319163361010081029190911790915560059091018590558251868152918201859052917f0e54eff26401bf69b81b26f60bd85ef47f5d85275c1d268d84f68d6897431c479101611c0f565b6124b16135ce565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916124e49130918791879101613bac565b600060405180830381600087803b1580156124fe57600080fd5b505af1158015612512573d6000803e3d6000fd5b505050505050565b6000818152600b60209081526040808320815160e08101835281546001600160a01b0390811682526001830154811694820194909452600282015492810183905260038201546060820152600482015460ff811615156080830152610100900490931660a08401526005015460c0830152600a54839160649161259c91613be6565b6125a69190613bfd565b949350505050565b6125b66135ce565b600a55565b6125c36135aa565b6000818152600b6020526040902060018101546001600160a01b0316156126375760405162461bcd60e51b815260206004820152602260248201527f72656a6563744269643a2050726f706572747920616c726561647920626f75676044820152611a1d60f21b60648201526084016108af565b600481015460ff1661269b5760405162461bcd60e51b815260206004820152602760248201527f72656a6563744269643a20596f752063616e6e6f7420626964206f6e2074686960448201526639903a37b5b2b760c91b60648201526084016108af565b600481015461010090046001600160a01b03166126fa5760405162461bcd60e51b815260206004820152601c60248201527f72656a6563744269643a204e6f206269647320746f2072656a6563740000000060448201526064016108af565b80546001600160a01b0316331461277b576040805162461bcd60e51b81526020600482015260248101919091527f72656a6563744269643a20596f752061667265206e6f7420746865206f776e6560448201527f72206f662074686973204e4654206f6e20746865206d61726b6574706c61636560648201526084016108af565b600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946127bc946101009004909116929101613b76565b6020604051808303816000875af11580156127db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ff9190613b8f565b506000828152600b6020908152604080832060048082018054610100600160a81b0319169055600591820194909455928401548454938501548251878152938401526001600160a01b0361010090910481169316917f6d699e170cc72516120ba19fe48e744504798d1afc2ffb65ff1154a6f4fa4d159101610f5c565b6128846135ce565b61288e6000613730565b565b6128986135ce565b600755565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156128e35750825b905060008267ffffffffffffffff1660011480156129005750303b155b90508115801561290e575080155b1561292c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561295657845460ff60401b1916600160401b1785555b61295f33613730565b6003600755603c6009556008805460ff19166001179055600580546001600160a01b031990811673e1f317efbc93d0e8c8f338f6f64973018eb9d4de17909155600680549091167377eff133ed48a27b04545f73a17348da4fbddf021790556014600a556129df60006129da6000546001600160a01b031690565b6135fb565b50612a04600080516020613cab8339815191526129da6000546001600160a01b031690565b508315612a4b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b612a5a6135aa565b6000828152600b602090815260409182902060065483516318160ddd60e01b8152935191936001600160a01b03909116926318160ddd926004808401938290030181865afa158015612ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad49190613c32565b8210612b3e5760405162461bcd60e51b815260206004820152603360248201527f75706461746550726963653a2050726963652063616e206e6f7420657863656560448201527264205553444320746f74616c20737570706c7960681b60648201526084016108af565b6000838152600b60205260409020546001600160a01b03163314612bca5760405162461bcd60e51b815260206004820152603a60248201527f75706461746550726963653a20596f7520646f6e2774206f776e20746869732060448201527f70726f7065727479204e465420696e20746865204d61726b657400000000000060648201526084016108af565b60018101546001600160a01b031615612c315760405162461bcd60e51b8152602060048201526024808201527f75706461746550726963653a2050726f706572747920616c726561647920626f6044820152631d59da1d60e21b60648201526084016108af565b6000838152600b6020908152604091829020600201849055815185815290810184905233917fb556fac599c3c70efb9ab1fa725ecace6c81cc48d1455f886607def065f3e0c09101611c0f565b612c866135aa565b612c9e600080516020613cab83398151915233612e14565b612d015760405162461bcd60e51b815260206004820152602e60248201527f63726561746550726f70657274793a2043616c6c657220646f206e6f7420686160448201526d7665206c697374657220726f6c6560901b60648201526084016108af565b6040805160e0810182526001600160a01b038087168083526000602080850182815285870189815242606088019081528915156080890190815260a0890186815260c08a018781528e8852600b909652958a9020985189549089166001600160a01b0319918216178a55935160018a018054918a1691909516179093559051600288015551600387015551600486018054935190951661010002610100600160a81b0319911515919091166001600160a81b03199093169290921791909117909255905160059092019190915590517fe26548fdade34bdea4845eabc1ce353ae8487b41fb41e06f86a94a00583ea6959061183f9086908690869092835260208301919091521515604082015260600190565b60009182526003602090815260408084206001600160a01b0393909316845291905290205460ff1690565b612e476135aa565b6000828152600b6020526040902060018101546001600160a01b031615612ebc5760405162461bcd60e51b8152602060048201526024808201527f62757950726f70657274793a2050726f706572747920616c726561647920626f6044820152631d59da1d60e21b60648201526084016108af565b81816002015414612f0f5760405162461bcd60e51b815260206004820152601860248201527f62757950726f70657274793a2057726f6e67207072696365000000000000000060448201526064016108af565b80546001600160a01b0316612f7e5760405162461bcd60e51b815260206004820152602f60248201527f62757950726f70657274793a204974656d206e6f74206c6973746564206f6e2060448201526e746865206d61726b6574706c61636560881b60648201526084016108af565b8054336001600160a01b0390911603612ff45760405162461bcd60e51b815260206004820152603260248201527f62757950726f70657274793a20596f752063616e6e6f74206275792061206974604482015271195b481d1a185d081e5bdd481b1a5cdd195960721b60648201526084016108af565b60028101546006546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015613041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130659190613c32565b10156130c55760405162461bcd60e51b815260206004820152602960248201527f62757950726f70657274793a2020555344432062616c616e636520697320696e6044820152681cdd59999a58d95b9d60ba1b60648201526084016108af565b60085460ff1615613206576000606460075483600201546130e69190613be6565b6130f09190613bfd565b905060008183600201546131049190613c1f565b6006546005546040516323b872dd60e01b81529293506001600160a01b03918216926323b872dd9261313f9233929116908790600401613bac565b6020604051808303816000875af115801561315e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131829190613b8f565b5060065483546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926131bb923392909116908690600401613bac565b6020604051808303816000875af11580156131da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131fe9190613b8f565b505050613288565b60065460055460028301546040516323b872dd60e01b81526001600160a01b03938416936323b872dd936132439333939290911691600401613bac565b6020604051808303816000875af1158015613262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132869190613b8f565b505b600481015461010090046001600160a01b03161561332657600654600480830154600584015460405163a9059cbb60e01b81526001600160a01b039485169463a9059cbb946132e1946101009004909116929101613b76565b6020604051808303816000875af1158015613300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133249190613b8f565b505b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916133599130913391899101613bac565b600060405180830381600087803b15801561337357600080fd5b505af1158015613387573d6000803e3d6000fd5b5050506000848152600b6020908152604080832080546001600160a01b0319908116825560018201805490911690556002808201859055600382018590556004820180546001600160a81b0319169055600590910193909355918401548251878152918201523392507f75decf89a96d485b07819128c69cca58057a61ec52a8ec4b406b16e9e0c701a49101611c0f565b6134206135ce565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61344a6135ce565b600955565b6134576135ce565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600360205260409020600101546134948161368f565b610f8d8383613699565b6134a66135ce565b6008805460ff1916911515919091179055565b6000818152600b60209081526040808320815160e08101835281546001600160a01b0390811682526001830154811694820194909452600282015492810183905260038201546060820152600482015460ff811615156080830152610100900490931660a08401526005015460c0830152600a54839160649161353b91613be6565b6135459190613bfd565b9050600060095482846040015161355c9190613c1f565b6135669190613bfd565b95945050505050565b6135776135ce565b6001600160a01b0381166135a157604051631e4fbdf760e01b8152600060048201526024016108af565b61201481613730565b60025460ff161561288e5760405163d93c066560e01b815260040160405180910390fd5b6000546001600160a01b0316331461288e5760405163118cdaa760e01b81523360048201526024016108af565b60006136078383612e14565b6136875760008381526003602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561363f3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610830565b506000610830565b6120148133613780565b60006136a58383612e14565b156136875760008381526003602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610830565b60026001540361372957604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61378a8282612e14565b610ace57808260405163e2517d3f60e01b81526004016108af929190613b76565b6000602082840312156137bd57600080fd5b81356001600160e01b0319811681146137d557600080fd5b9392505050565b6000602082840312156137ee57600080fd5b5035919050565b6001600160a01b038116811461201457600080fd5b60008060008060006080868803121561382257600080fd5b853561382d816137f5565b9450602086013561383d816137f5565b935060408601359250606086013567ffffffffffffffff8082111561386157600080fd5b818801915088601f83011261387557600080fd5b81358181111561388457600080fd5b89602082850101111561389657600080fd5b9699959850939650602001949392505050565b6000602082840312156138bb57600080fd5b81356137d5816137f5565b600080604083850312156138d957600080fd5b8235915060208301356138eb816137f5565b809150509250929050565b6000806040838503121561390957600080fd5b50508035926020909101359150565b6000806040838503121561392b57600080fd5b8235613936816137f5565b946020939093013593505050565b801515811461201457600080fd5b60008060006060848603121561396757600080fd5b8335925060208401359150604084013561398081613944565b809150509250925092565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156139b457600080fd5b823567ffffffffffffffff808211156139cc57600080fd5b818501915085601f8301126139e057600080fd5b8135818111156139f2576139f261398b565b8060051b604051601f19603f83011681018181108582111715613a1757613a1761398b565b604052918252848201925083810185019188831115613a3557600080fd5b938501935b82851015613a5357843584529385019392850192613a3a565b98975050505050505050565b60018060a01b0380825116835280602083015116602084015260408201516040840152606082015160608401526080820151151560808401528060a08301511660a08401525060c081015160c08301525050565b6020808252825182820181905260009190848201906040850190845b81811015613af557613ae2838551613a5f565b9284019260e09290920191600101613acf565b50909695505050505050565b60008060008060808587031215613b1757600080fd5b8435613b22816137f5565b935060208501359250604085013591506060850135613b4081613944565b939692955090935050565b60e081016108308284613a5f565b600060208284031215613b6b57600080fd5b81356137d581613944565b6001600160a01b03929092168252602082015260400190565b600060208284031215613ba157600080fd5b81516137d581613944565b6001600160a01b039384168152919092166020820152604081019190915260600190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761083057610830613bd0565b600082613c1a57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561083057610830613bd0565b600060208284031215613c4457600080fd5b5051919050565b8082018082111561083057610830613bd0565b600060208284031215613c7057600080fd5b81516137d5816137f5565b634e487b7160e01b600052603260045260246000fd5b600060018201613ca357613ca3613bd0565b506001019056fef94103142c1baabe9ac2b5d1487bf783de9e69cfeea9a72f5c9c94afd7877b8ca264697066735822122086c3631a458713612ef539d269d45ddcc9637ca2926ed8765abe21da24d34eb664736f6c63430008140033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "InvalidInitialization()": [
        {
          "details": "The contract is already initialized."
        }
      ],
      "NotInitializing()": [
        {
          "details": "The contract is not initializing."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "events": {
      "Initialized(uint64)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3249,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4658,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 4539,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_paused",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 2888,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "_roles",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)2883_storage)"
      },
      {
        "astId": 8612,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "propertyNFT",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC721)4293"
      },
      {
        "astId": 8614,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "taxReceiver",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 8617,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "TUSDCtoken",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IERC20)4150"
      },
      {
        "astId": 8619,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "taxFees",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 8621,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "isTax",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 8623,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "periodInMonth",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 8625,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "percentage_downPayment",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 8661,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "items",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_struct(MarketItem)8645_storage)"
      },
      {
        "astId": 8666,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "installment",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_struct(InstallmentData)8656_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)4150": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IERC721)4293": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)2883_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)2883_storage"
      },
      "t_mapping(t_uint256,t_struct(InstallmentData)8656_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.InstallmentData)",
        "numberOfBytes": "32",
        "value": "t_struct(InstallmentData)8656_storage"
      },
      "t_mapping(t_uint256,t_struct(MarketItem)8645_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.MarketItem)",
        "numberOfBytes": "32",
        "value": "t_struct(MarketItem)8645_storage"
      },
      "t_struct(InstallmentData)8656_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.InstallmentData",
        "members": [
          {
            "astId": 8647,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "downPayment",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 8649,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "monthlyAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 8651,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "remainingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 8653,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "paidAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 8655,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "paymentDeadline",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(MarketItem)8645_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.MarketItem",
        "members": [
          {
            "astId": 8632,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 8634,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "buyer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 8636,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 8638,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "timeListed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 8640,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "canBid",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          },
          {
            "astId": 8642,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "highestBidder",
            "offset": 1,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 8644,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "highestBid",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(RoleData)2883_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 2880,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 2882,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}